# 2024-05-04
name: Fork & Edit

on:
  workflow_dispatch:
  schedule:
    - cron: "30 */4 * * *"
  
jobs:
  Fork-FLITER-list:
    runs-on: ubuntu-latest
    env:
      TZ: 'Asia/Shanghai'
    
    steps: 
    - name: Checkout target repository
      uses: actions/checkout@v4.1.0
      with:
        repository: siixx666/S
        path: S-repo

###### 下载文件到 Surge
    - name: Download files to Surge
      run: |
        mkdir -p S-repo/Surge/Rules
        # 最小规则
        curl -L -o S-repo/Surge/Rules/blocked.list "https://github.com/Blankwonder/surge-list/raw/master/blocked.list"
        curl -L -o S-repo/Surge/Rules/cn.list "https://github.com/Blankwonder/surge-list/raw/master/cn.list"
        curl -L -o S-repo/Surge/Rules/apple.list "https://github.com/Blankwonder/surge-list/raw/master/apple.list"
        curl -L -o S-repo/Surge/Rules/telegram.list "https://github.com/Blankwonder/surge-list/raw/master/telegram.list"
        curl -L -o S-repo/Surge/Rules/netflix.list "https://github.com/Blankwonder/surge-list/raw/master/netflix.list"
        # OpenAI
        curl -L -o Q-repo/Surge/Rules/openai.list "https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Rule/OpenAI.list"
        # AIGC
        curl -L -o Q-repo/Surge/Rules/ai.list "https://ruleset.skk.moe/List/non_ip/ai.conf"
        # 速度测试
        curl -L -o Q-repo/Surge/Rules/speedtest.list "https://ruleset.skk.moe/List/domainset/speedtest.conf"
        # 常见静态CDN
        curl -L -o Q-repo/Surge/Rules/cdn_domainset.list "https://ruleset.skk.moe/List/domainset/cdn.conf"
        curl -L -o Q-repo/Surge/Rules/cdn_non_ip.list "https://ruleset.skk.moe/List/non_ip/cdn.conf"
        # 苹果&微软CDN
        curl -L -o Q-repo/Surge/Rules/apple_cdn.list "https://ruleset.skk.moe/List/non_ip/apple_cdn.conf"
        curl -L -o Q-repo/Surge/Rules/microsoft_cdn.list "https://ruleset.skk.moe/List/non_ip/microsoft_cdn.conf"
        # 下载 软件、游戏和驱动的下载和更新域名
        curl -L -o Q-repo/Surge/Rules/download_domainset.list "https://ruleset.skk.moe/List/domainset/download.conf"
        curl -L -o Q-repo/Surge/Rules/download_non_ip.list "https://ruleset.skk.moe/List/non_ip/download.conf"
        # 苹果CN
        curl -L -o Q-repo/Surge/Rules/apple_cn.list "https://ruleset.skk.moe/List/non_ip/apple_cn.conf"
        # 苹果&微软全球
        curl -L -o Q-repo/Surge/Rules/icloud_private_relay.list "https://ruleset.skk.moe/List/domainset/icloud_private_relay.conf"
        curl -L -o Q-repo/Surge/Rules/apple_services.list "https://ruleset.skk.moe/List/non_ip/apple_services.conf"
        curl -L -o Q-repo/Surge/Rules/microsoft.list "https://ruleset.skk.moe/List/non_ip/microsoft.conf"

    # 适配 Surge 规则
    - name: Edit Surge/Rules
      run: |
        cd S-repo/Surge/Rules
        for file in *.list; do
          if [ "$file" != "Lan.list" ] ; then
            # 适配
            sed -i -e 's/, /,/g' \
                   -e 's/;/# /g' \
                   -e 's/host,/HOST,/g' \
                   -e 's/host-/HOST-/g' \
                   -e 's/-suffix/-SUFFIX/g' \
                   -e 's/-keyword/-KEYWORD/g' \
                   -e 's/ip-cidr/IP-CIDR/g' \
                   -e 's/-wildcard/-WILDCARD/g' \
                   -e 's/geoip/GEOIP/g' \
                   -e 's/HOST,/DOMAIN,/g' \
                   -e 's/HOST-/DOMAIN-/g' \
                   -e 's/IP6-CIDR,/IP-CIDR6,/g' \
                   -e 's/,REJECT$//g' \
                   -e 's/,DIRECT$//g' \
                   -e 's/,reject$//g' \
                   -e 's/,direct$//g' \
                   -e '/# 更新：/d' \
                   -e '/# AUTHOR:/d' \
                   -e '/# REPO:/d' \
                   -e '/# UPDATED:/d' \
                   -e '/# 数目: /d' \
                   -e '/# 规则: /d' \
                   "$file"
            # 如果为IP规则且不包含no-resolve 则添加no-resolve
            awk '/^IP-/ && !/,no-resolve/ {print $0",no-resolve"; next} {print}' "$file" > tmpfile
            mv tmpfile "$file"
          else
            echo "$file not found."
          fi
        done

    # 转换 domain-set 为 rule-set
    - name: Edit Surge/Rules domain-set to rule-set
      run: |
        cd S-repo/Surge/Rules
        for file in AdGuardChinese.list Ads_AWAvenue.list Ads_SukkaW.list; do
          if [ -f "$file" ]; then
            # 将以.开头的行的第一个.替换为 DOMAIN-SUFFIX,
            sed -i '/^\./s/^\./DOMAIN-SUFFIX,/' "$file"
            # 将除了以#开头、空行和以DOMAIN-SUFFIX开头之外的行，在行首添加 DOMAIN,
            sed -i '/^\s*$/b; /^\s*#/b; /^DOMAIN-SUFFIX,/b; s/^\([^#]\)/DOMAIN,\1/' "$file"
          else
            echo "$file not found."
          fi
        done

    # 去重排序
    - name: Remove duplicates and lines 
      run: |
        cd S-repo/Surge/Rules
        shopt -s nullglob  # 避免没有匹配的文件时保留原始通配符
        for file in Reject.list; do
          if [ -f "$file" ]; then
            sorted_file="sorted_${file}"
            # 使用 grep 去掉包含 # 的行
            grep -v '^\s*#' "$file" | grep -v '^\s*$' | sort | uniq > "$sorted_file"
            mv "$sorted_file" "$file"
          else
            echo "$file not found."
          fi
        done
      shell: bash         
            
######       
    - name: Add and Commits
      run: |
        cd S-repo
        if [[ -n $(git status -s) ]]; then
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Auto Update $(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M')"
          git push origin HEAD
        else
          echo "No changes to commit."
        fi

    - name: Cleanup Workflow
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2
